# -*- coding: utf-8 -*-
"""studygroup6keiyamatuzaki.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13X-At5U2xKwhc8Cji8HEf2FeyjUmXcf5
"""

#課題1
a = ['m','c','i','e','p','r','e','t','o',' ','o','o','i','s','g','o','p']
b = ['a','h','n',' ','e','c','p','i','n','r','b','t','c','-','r','u','!']

text = zip(a, b)

for ch in text:
  print(ch, end="")

#課題2
import numpy as np

math = np.array([40, 15, 72, 22, 43, 82, 75, 7, 34, 49, 95, 75, 85, 47, 63])

pas = np.sum(np.where(math >= 70, 1, 0))
print('pass = ', pas)

Z = (math - np.mean(math)) / np.std(math)
print('Z = ', Z)

#課題3
import matplotlib.pyplot as plt
import numpy as np

def sigmoid(x):
  return 1 / (1 + np.exp(-x))

def softmax(x):
  exp_x = np.exp(x)
  sum_exp_x = np.sum(exp_x)
  return exp_x / sum_exp_x

def tanh(x):
  exp_x = np.exp(x)
  exp__x = np.exp(-x)
  return (exp_x - exp__x) / (exp_x + exp__x)

x = np.arange(-5.0, 5.0, 0.1)
y = sigmoid(x)
yy = softmax(x)
yyy = tanh(x)

plt.plot(x,y,label="A")
plt.plot(x,yy,label="B")
plt.plot(x,yyy,label="C")
plt.legend(["sigmoid","softmax","tanh"])
plt.ylim(-1.2, 1.2)
plt.title("activation function")
plt.xlabel("input")
plt.ylabel("output")
plt.show()